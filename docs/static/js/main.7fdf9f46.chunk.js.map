{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFecthGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAIhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,sCCHbG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAGdC,EAHc,iDAGkCC,UAAUH,GAH5C,+DAIDI,MAAMF,GAJL,cAIdG,EAJc,gBAKCA,EAAKC,OALN,uBAKbC,EALa,EAKbA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVrB,kBAcbM,GAda,4CAAH,sDCDRO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,mEAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,SCAJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAItB,ECJwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC3BqB,KAAM,GACNa,SAAS,IAFjB,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,UAKtBC,EDZwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAWpB,OACI,qCACA,mCAAMpB,EAAN,OACCoB,GAAW,2CACZ,qBAAKJ,UAAU,aAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aE3BpBgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,SAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAKA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQS,EAAWe,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCbjC4B,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.7fdf9f46.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log('submit')\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((categories) => [inputValue, ...categories]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","\r\n\r\n\r\n export const getGifs = async(category) => {\r\n\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=bmKXpbHJsupLUU599iJs3YvRiAFRsb7C`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return gifs  \r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__jackInTheBox animate__delay-0.9s\">\r\n            <img src={url} alt={title} />\r\n            <p> {title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFecthGifs } from '../hooks/useFecthGifs'\r\n// import { useEffect } from 'react';\r\n// import { useState } from 'react/cjs/react.development';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import {getGifs} from '../helpers/getGifs'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    // const [images, setImages] = useState([])\r\n    const {data:images, loading} = useFecthGifs(category);\r\n    // useEffect(()=> {\r\n    //     getGifs(category)\r\n    //         .then(setImages)\r\n            \r\n    // }, [category])\r\n\r\n   \r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n        <h3> {category} </h3>\r\n        {loading && <p>Loading...</p>}\r\n        <div className=\"card-grid \">\r\n            \r\n            {\r\n                images.map(img =>(\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                ))\r\n            }\r\n            \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\n\r\n\r\nexport const useFecthGifs = (category)=> {\r\n    const [state, setState] = useState({\r\n            data: [],\r\n            loading: true\r\n    });\r\n\r\n    useEffect(()=> {\r\n        getGifs(category)\r\n            .then(imgs=>{                \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });                \r\n            })\r\n    })\r\n\r\n    return state;\r\n    \r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['Piri']);\r\n    // const handleAdd = () => {\r\n    //     setCategories(categories => [...categories, 'gasti']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}